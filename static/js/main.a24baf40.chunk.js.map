{"version":3,"sources":["components/Navbar/MenuItems.js","components/Button.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItems","title","url","cName","STYLES","SIZES","URLS","TARGETS","Button","children","target","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","checkButtonURL","checkURLTarget","className","href","Navbar","state","clicked","handleClick","setState","this","map","item","index","Component","App","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mRAAaA,EAAY,CACrB,CACIC,MAAO,OACPC,IAAK,IACLC,MAAO,aAEX,CACIF,MAAO,QACPC,IAAK,IACLC,MAAO,aAEX,CACIF,MAAO,iBACPC,IAAK,+CACLC,MAAO,qB,eCXTC,EAAS,CACX,eACA,gBAGEC,EAAQ,CACV,UACA,WAGEC,EAAO,CACT,gDAGEC,EAAU,CACZ,SACA,SAGSC,EAAS,SAAC,GAQhB,IAPHC,EAOE,EAPFA,SACAP,EAME,EANFA,IACAQ,EAKE,EALFA,OACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,YACAC,EACE,EADFA,WAEMC,EAAmBX,EAAOY,SAASH,GAAeA,EAAcT,EAAO,GAEvEa,EAAiBZ,EAAMW,SAASF,GAAcA,EAAaT,EAAM,GAEjEa,EAAgBZ,EAAKU,SAASd,GAAOA,EAAMI,EAAK,GAEhDa,EAAgBb,EAAKU,SAASN,GAAUA,EAASH,EAAQ,GAE/D,OACI,mBAAGa,UAAS,cAASL,EAAT,YAA6BE,GAAmBL,QAASA,EACrED,KAAMA,EAAMU,KAAMH,EAAgBR,OAAQS,EAD1C,SAEKV,KCLEa,G,kNA/BXC,MAAQ,CAAEC,SAAS,G,EAEnBC,YAAc,WACV,EAAKC,SAAS,CAAEF,SAAU,EAAKD,MAAMC,W,4CAIzC,WACI,OACI,sBAAKJ,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,gCACA,qBAAKA,UAAU,YAAYR,QAASe,KAAKF,YAAzC,SACI,mBAAGL,UAAWO,KAAKJ,MAAMC,QAAU,eAAiB,kBAExD,oBAAIJ,UAAWO,KAAKJ,MAAMC,QAAU,kBAAoB,WAAxD,SACKxB,EAAU4B,KAAI,SAACC,EAAMC,GAClB,OACI,6BACI,mBAAGV,UAAWS,EAAK1B,MAAOkB,KAAMQ,EAAK3B,IAArC,SACK2B,EAAK5B,SAFL6B,QAQrB,cAAC,EAAD,oC,GA1BKC,c,MCaNC,MAff,WACE,OACE,gCACI,cAAC,EAAD,IACA,sBAAKZ,UAAU,MAAf,UACA,qBAAKa,IAAI,kFACLb,UAAU,aACZ,oDAEA,kECAKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a24baf40.chunk.js","sourcesContent":["export const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Rules',\r\n        url: '#',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'View On GitHub',\r\n        url: 'https://github.com/aazucena/gi-rnd-generator',\r\n        cName: 'nav-links-mobile'\r\n    }\r\n]","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--md',\r\n    'btn--lg'\r\n]\r\n\r\nconst URLS = [\r\n    'https://github.com/aazucena/gi-rnd-generator'\r\n]\r\n\r\nconst TARGETS = [\r\n    '_blank',\r\n    '_self'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    url,\r\n    target,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n\r\n    const checkButtonSize= SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    const checkButtonURL= URLS.includes(url) ? url : URLS[0]\r\n\r\n    const checkURLTarget= URLS.includes(target) ? target : TARGETS[0]\r\n\r\n    return(\r\n        <a className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick}\r\n        type={type} href={checkButtonURL} target={checkURLTarget}> \r\n            {children}\r\n        </a>\r\n    )\r\n\r\n}","import React, { Component } from 'react';\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport { Button } from \"../Button\";\r\nimport './Navbar.css'\r\n\r\nclass Navbar extends Component {\r\n    state = { clicked: false }\r\n\r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked })\r\n    }\r\n\r\n\r\n    render () {\r\n        return(\r\n            <nav className=\"NavbarItems\">\r\n                <h1 className=\"navbar-logo\">Genshin Impact RNG</h1>\r\n                <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n                </div>\r\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                    {MenuItems.map((item, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <a className={item.cName} href={item.url}>\r\n                                    {item.title}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Button>View On GitHub</Button>\r\n            </nav>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default Navbar;\r\n","import Navbar from \"./components/Navbar/Navbar.js\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n        <Navbar />\n        <div className=\"App\">\n        <img src=\"https://www.gensh.in/fileadmin/Database/Monsters/UI_MonsterIcon_Effigy_Wind.png\"\n            className=\"App-logo\"/>\n          <h1>Genshin Impact RNG \n          </h1>\n          <h4>Competitive Speedrun Game</h4>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}